spring:
  # MySQL 데이터베이스 설정 (운영 환경)
  datasource:
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:backdb}?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}
    hikari:
      maximum-pool-size: 10  # 커넥션 풀 최대 크기
      minimum-idle: 5  # 최소 유휴 커넥션
      connection-timeout: 30000  # 커넥션 타임아웃 (30초)
      idle-timeout: 600000  # 유휴 커넥션 타임아웃 (10분)
      max-lifetime: 1800000  # 커넥션 최대 생명주기 (30분)
  
  # H2 콘솔 비활성화 (보안)
  h2:
    console:
      enabled: false
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate  # 운영에서는 스키마 검증만 수행 (변경 금지)
    show-sql: false  # SQL 로그 비활성화 (성능)
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: 100  # N+1 문제 해결을 위한 배치 사이즈
  
  # DevTools 비활성화
  devtools:
    livereload:
      enabled: false
    restart:
      enabled: false

# 로깅 레벨 (운영 환경은 최소화)
logging:
  level:
    root: WARN
    com.back: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
  # 로그 파일 설정
  file:
    name: /var/log/back/application.log
    max-size: 10MB
    max-history: 30

# 서버 설정
server:
  port: ${SERVER_PORT:8080}
  # 운영 환경 최적화
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  tomcat:
    threads:
      max: 200
      min-spare: 10

# Actuator 보안 설정
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: never  # 상세 정보 숨김

---
# 운영 환경 설명
# - MySQL 데이터베이스 사용
# - 환경변수를 통한 민감 정보 관리 (DB_HOST, DB_USERNAME 등)
# - ddl-auto: validate로 스키마 보호
# - 최소한의 로깅으로 성능 최적화
# - 커넥션 풀 설정으로 DB 연결 관리
# - 압축 및 스레드 풀 설정으로 성능 향상
